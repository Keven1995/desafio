version: '3.8'

services:
  # Serviço de banco de dados MySQL
  db:
    image: mysql:5.7.44
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} # Senha do root do MySQL
      MYSQL_DATABASE: ${MYSQL_DATABASE} # Nome do banco de dados
    volumes:
      - db_data:/var/lib/mysql # Volume para persistir dados do banco de dados
      - ./Mysql:/docker-entrypoint-initdb.d # Pasta para scripts de inicialização do banco de dados
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h db -u root -p${MYSQL_ROOT_PASSWORD}"] # Verificação de saúde do MySQL
      timeout: 10s
      retries: 10
    networks:
      - mercado_network

  # Serviço da aplicação Node.js
  app:
    build: ./Node # Diretório contendo o Dockerfile para a construção da imagem
    ports:
      - "3000:3000" # Mapeamento de porta para acessar a aplicação
    env_file:
      - ./.env # Arquivo contendo variáveis de ambiente
    depends_on:
      db:
        condition: service_healthy # Garante que o serviço de banco de dados esteja saudável antes de iniciar a aplicação
    networks:
      - mercado_network
    
  # Serviço da aplicação PHP (web)
  web:
    build: ./Php # Diretório contendo o Dockerfile para a construção da imagem
    ports:
      - "80:80" # Mapeamento de porta para acessar a aplicação web
    depends_on:
      - app # Garante que a aplicação Node.js esteja pronta antes de iniciar a aplicação web
    networks:
      - mercado_network

volumes:
  db_data: {} # Definição do volume para persistência de dados do MySQL

networks:
  mercado_network:
    driver: bridge # Configuração da rede Docker
